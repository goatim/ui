@use '~@cezembre/fronts/dist/screens';
@use '../styles/colors';
@use '../styles/fonts';

.friday-ui-button {
  display: inline-block;
  cursor: pointer;
  -webkit-touch-callout: none;
  user-select: none;
  border: none;
  outline: none;
  text-decoration: none;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  background: transparent;
  position: relative;
  transition: background linear 100ms, opacity linear 100ms;
  overflow: hidden;
  font-size: 1em;
  box-sizing: border-box;

  * {
    box-sizing: border-box;
  }

  &.full-width {
    width: 100%;
  }

  > .container {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: center;

    > .icon {
      display: flex;
      align-items: center;
      justify-content: center;

      &.left {
        margin-right: 10px;
      }

      &.right {
        margin-left: 10px;
      }

      > svg {
        height: 15px;
      }
    }

    > .label {
      @include fonts.Inter(.8em, colors.$blue, 600);
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
    }

    > .component {
      overflow: hidden;
    }
  }

  > .pending {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    justify-content: center;
    align-items: center;
    background: rgba(colors.$blue, .5);
    display: flex;
    visibility: hidden;
    opacity: 0;
    transition: visibility linear 100ms, opacity linear 100ms;
  }

  &.small > .container {
    > .icon > svg {
      height: 12px;
    }

    > .label {
      font-size: .75em;
    }
  }

  &.large > .container {
    > .icon > svg {
      height: 20px;
    }

    > .label {
      font-size: .9em;
    }
  }

  &.filled {
    &.small {
      height: 30px;
      border-radius: 4px;
      padding: 0 1em;
    }

    &.medium {
      height: 35px;
      border-radius: 5px;
      padding: 0 1.5em;
    }

    &.large {
      height: 40px;
      border-radius: 8px;
      padding: 0 1.8em;
    }

    &.electric-blue {
      background: colors.$electric-blue;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .label {
          color: white;
        }
      }

      &:hover, &.active {
        background: colors.$blue;
      }
    }

    &.dark {
      background: colors.$blue;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .label {
          color: white;
        }
      }

      &:hover, &.active {
        background: colors.$electric-blue;
      }
    }

    &.light {
      background: colors.$light-blue;
      border: solid rgba(colors.$blue, .1) 1px;

      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .label {
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        background: rgba(colors.$blue, .1);
      }
    }

    &.transparent-dark {
      background: rgba(colors.$blue, .2);
      border: solid rgba(colors.$blue, .1) 1px;

      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .label {
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        background: rgba(colors.$blue, .3);
      }
    }

    &.transparent-light {
      background: rgba(white, .2);
      border: solid rgba(white, .1) 1px;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .label {
          color: white;
        }
      }

      &:hover, &.active {
        background: rgba(white, .5);
      }
    }

    &.buy {
      background: colors.$green;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .label {
          color: white;
        }
      }

      &:hover, &.active {
        opacity: .8;
      }
    }

    &.sell {
      background: colors.$red;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .label {
          color: white;
        }
      }

      &:hover, &.active {
        opacity: .7;
      }
    }
  }

  &.text {
    &.electric-blue {
      > .container {
        svg[stroke] {
          stroke: colors.$electric-blue;
        }

        svg:not([stroke]) {
          fill: colors.$electric-blue;
        }

        > .label {
          color: colors.$electric-blue;
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: colors.$blue;
          }

          svg:not([stroke]) {
            fill: colors.$blue;
          }

          > .label {
            color: colors.$blue;
          }
        }
      }
    }

    &.dark {
      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .label {
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: colors.$electric-blue;
          }

          svg:not([stroke]) {
            fill: colors.$electric-blue;
          }

          > .label {
            color: colors.$electric-blue;
          }
        }
      }
    }

    &.light {
      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .label {
          color: white;
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: colors.$medium-blue;
          }

          svg:not([stroke]) {
            fill: colors.$medium-blue;
          }

          > .label {
            color: colors.$medium-blue;
          }
        }
      }
    }

    &.transparent-dark {
      > .container {
        svg[stroke] {
          stroke: rgba(colors.$blue, .5);
        }

        svg:not([stroke]) {
          fill: rgba(colors.$blue, .5);
        }

        > .label {
          color: rgba(colors.$blue, .5);
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: colors.$blue;
          }

          svg:not([stroke]) {
            fill: colors.$blue;
          }

          > .label {
            color: colors.$blue;
          }
        }
      }
    }

    &.transparent-light {
      > .container {
        svg[stroke] {
          stroke: rgba(white, .5);
        }

        svg:not([stroke]) {
          fill: rgba(white, .5);
        }

        > .label {
          color: rgba(white, .5);
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: white;
          }

          svg:not([stroke]) {
            fill: white;
          }

          > .label {
            color: white;
          }
        }
      }
    }

    &.buy {
      > .container {
        svg[stroke] {
          stroke: colors.$green;
        }

        svg:not([stroke]) {
          fill: colors.$green;
        }

        > .label {
          color: colors.$green;
        }
      }
    }

    &.sell {
      > .container {
        svg[stroke] {
          stroke: colors.$red;
        }

        svg:not([stroke]) {
          fill: colors.$red;
        }

        > .label {
          color: colors.$red;
        }
      }
    }
  }

  &.disabled {
    cursor: not-allowed;
    pointer-events: none;
    opacity: .5;
  }

  &.pending > .pending {
    visibility: visible;
    opacity: 1;
  }
}
