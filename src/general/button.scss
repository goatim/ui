@use '~@cezembre/fronts/dist/screens';
@use '../styles/colors';
@use '../styles/fonts';

.friday-ui-button {
  display: block;
  cursor: pointer;
  -webkit-touch-callout: none;
  user-select: none;
  border: none;
  outline: none;
  text-decoration: none;
  flex-shrink: 0;
  margin: 0;
  padding: 0;
  background: transparent;
  position: relative;
  transition: box-shadow linear 100ms, background linear 100ms;
  overflow: hidden;
  font-size: 1em;

  > .container {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 0;
    display: flex;
    align-items: center;
    justify-content: space-between;

    > .body {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      flex-shrink: 2;
      min-width: 0;

      > .left-icon {
        align-self: center;
        flex-shrink: 0;
        margin-right: 10px;
        display: flex;
        align-items: center;
        justify-content: center;

        > svg {
          height: 15px;
        }
      }

      > .label {
        @include fonts.IBM-Plex-Sans(.8em, colors.$blue, bold);
        align-self: center;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        flex-shrink: 2;
      }

      > .component {
        align-self: center;
        flex-shrink: 2;
        overflow: hidden;
      }
    }

    > .right-icon {
      align-self: center;
      flex-shrink: 0;
      margin-left: 10px;
      display: flex;
      align-items: center;
      justify-content: center;

      > svg {
        height: 15px;
      }
    }
  }

  > .pending {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    justify-content: center;
    align-items: center;
    background: rgba(colors.$blue, .5);
    display: flex;
    visibility: hidden;
    opacity: 0;
    transition: visibility linear 100ms, opacity linear 100ms;
  }

  &.small > .container {
    > .body {
      > .left-icon > svg {
        height: 12px;
      }

      > .label {
        font-size: .7em;
      }
    }

    > .right-icon > svg {
      height: 12px;
    }
  }

  &.large > .container {
    > .body {
      > .left-icon > svg {
        height: 20px;
      }

      > .label {
        font-size: .9em;
      }
    }

    > .right-icon > svg {
      height: 20px;
    }
  }

  &.text {
    &.default {
      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .body > .label {
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: colors.$electric-blue;
          }

          svg:not([stroke]) {
            fill: colors.$electric-blue;
          }

          > .body > .label {
            color: colors.$electric-blue;
          }
        }
      }
    }

    &.light {
      > .container {
        svg[stroke] {
          stroke: colors.$light-blue;
        }

        svg:not([stroke]) {
          fill: colors.$light-blue;
        }

        > .body > .label {
          color: colors.$light-blue;
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: white;
          }

          svg:not([stroke]) {
            fill: white;
          }

          > .body > .label {
            color: white;
          }
        }
      }
    }

    &.darker {
      > .container {
        svg[stroke] {
          stroke: rgba(colors.$blue, .2);
        }

        svg:not([stroke]) {
          fill: rgba(colors.$blue, .2);
        }

        > .body > .label {
          color: rgba(colors.$blue, .2);
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: colors.$blue;
          }

          svg:not([stroke]) {
            fill: colors.$blue;
          }

          > .body > .label {
            color: colors.$blue;
          }
        }
      }
    }

    &.lighter {
      > .container {
        svg[stroke] {
          stroke: rgba(white, .5);
        }

        svg:not([stroke]) {
          fill: rgba(white, .5);
        }

        > .body > .label {
          color: rgba(white, .5);
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: white;
          }

          svg:not([stroke]) {
            fill: white;
          }

          > .body > .label {
            color: white;
          }
        }
      }
    }

    &.submit {
      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .body > .label {
          color: colors.$blue;
          background: linear-gradient(90deg, colors.$blue 0%, colors.$fushia 100%);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
        }
      }
    }
  }

  &.filled {
    &.small {
      height: 35px;
      border-radius: 4px;
      padding: 0 1.5em;
    }

    &.medium {
      height: 40px;
      border-radius: 5px;
      padding: 0 2em;
    }

    &.large {
      height: 45px;
      border-radius: 6px;
      padding: 0 2.5em;
    }

    &.default {
      background: colors.$light-blue;

      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .body > .label {
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        background: colors.$medium-blue;
      }
    }

    &.light {
      background: white;

      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .body > .label {
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        background: colors.$light-blue;
      }
    }

    &.darker {
      background: white;

      > .container {
        svg[stroke] {
          stroke: rgba(colors.$blue, .2);
        }

        svg:not([stroke]) {
          fill: rgba(colors.$blue, .2);
        }

        > .body > .label {
          color: rgba(colors.$blue, .2);
        }
      }

      &:hover, &.active {
        background: colors.$blue;
      }
    }

    &.lighter {
      background: rgba(white, .2);
      border: solid rgba(white, .1) 1px;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .body > .label {
          color: white;
        }
      }

      &:hover, &.active {
        background: rgba(white, .5);
      }
    }

    &.submit {
      background: linear-gradient(90deg, colors.$blue 0%, colors.$fushia 100%);

      > .container {
        svg[stroke] {
          stroke: colors.$light-blue;
        }

        svg:not([stroke]) {
          fill: colors.$light-blue;
        }

        > .body > .label {
          color: colors.$light-blue;
        }
      }

      &:hover, &.active {
        > .container {
          svg[stroke] {
            stroke: white;
          }

          svg:not([stroke]) {
            fill: white;
          }

          > .body > .label {
            color: white;
          }
        }
      }
    }

    &.action {
      background: colors.$blue;

      > .container {
        svg[stroke] {
          stroke: white;
        }

        svg:not([stroke]) {
          fill: white;
        }

        > .body > .label {
          text-transform: uppercase;
          letter-spacing: .05em;
          color: white;
        }
      }

      &:hover, &.active {
        background: colors.$electric-blue;
      }
    }

    &.action-discreet {
      background: rgba(colors.$blue, .2);

      > .container {
        svg[stroke] {
          stroke: colors.$blue;
        }

        svg:not([stroke]) {
          fill: colors.$blue;
        }

        > .body > .label {
          text-transform: uppercase;
          letter-spacing: .05em;
          color: colors.$blue;
        }
      }

      &:hover, &.active {
        background: rgba(colors.$blue, .5);

        > .container {
          svg[stroke] {
            stroke: white;
          }

          svg:not([stroke]) {
            fill: white;
          }

          > .body > .label {
            color: white;
          }
        }
      }
    }
  }

  &.disabled {
    cursor: not-allowed;
    pointer-events: none;
    opacity: .5;
  }

  &.pending > .pending {
    visibility: visible;
    opacity: 1;
  }
}
